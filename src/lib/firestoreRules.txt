rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // match /{document=**} {
    //   allow read, write: if false;
    // }
    
    match /users/{userId} {
    	allow read;
      allow create: if isValidUser(userId);
      allow update: if request.auth.uid == userId
      						&& request.resource.data.links.size() <= 10
                  && request.resource.data.bio.size() <= 256
                  && request.resource.data.username == resource.data.username;
    }
    
    match /usernames/{username} {
    	allow read;
      allow create: if isValidUsername(username);
    }
    
    
    function isValidUser(userId) {
    	let isOwner = request.auth.uid == userId;
      let username = request.resource.data.username;
    	let createdValidUsername = existsAfter(/databases/$(database)/documents/usernames/$(username));
      
      return isOwner && createdValidUsername;
    }
    
    function isValidUsername(username) {
    	let isOwner = request.auth.uid == request.resource.data.uid;
      let isValidLength = username.size() >= 3 && username.size() <= 15;
      let isValidUserDoc = getAfter(/databases/$(databse)/documents/users/$(request.auth.uid)).data.username == username;
      
      return isOwner && isValidLength && isValidUserDoc;
    }
    
  }
}